##
## -------------------------
## |   M E D I A B O X     |
## -------------------------
##
## Container based media tools configuration
##
## -- DO NOT EDIT THIS FILE --
##
## Configuration items for this file are taken from the .env file
##
## Have docker-compose.yml and .env in the same directory to launch the stack

version: '2'

######################
# SERVICES TO LAUNCH #
######################

services:

    # ----------------------------------------
    # COUCHPOTATO
    # ----------------------------------------
    #couchpotato:
    #    image: linuxserver/couchpotato
    #    container_name: couchpotato
    #    restart: unless-stopped
    #    ports:
    #        - '${IP_ADDRESS}:5050:5050'
    #    environment:
    #        - PUID=${PUID}
    #        - PGID=${PGID}
    #    volumes:
    #        - '${CONFIGDIRECTORY}/couchpotato:/config'
    #        - '${MEDIADIRECTORY}/completed:/downloads'
    #        - '${MEDIADIRECTORY}/movies:/movies'

    # ----------------------------------------
    # DELUGEVPN
    # ----------------------------------------
    #arch-delugevpn:
    #    image: binhex/arch-delugevpn
    #    container_name: delugevpn
    #    restart: unless-stopped
    #    ports:
    #        - '${IP_ADDRESS}:8112:8112'
    #        - '${IP_ADDRESS}:8118:8118'
    #        - '${IP_ADDRESS}:58846:58846'
    #        - '${IP_ADDRESS}:58946:58946'
    #    cap_add:
    #        - NET_ADMIN
    #    environment:
    #        - VPN_ENABLED=yes
    #        - VPN_USER=${PIAUNAME}
    #        - VPN_PASS=${PIAPASS}
    #        - VPN_REMOTE=ca.privateinternetaccess.com
    #        - VPN_PORT=1198
    #        - VPN_PROTOCOL=udp
    #        - VPN_DEVICE_TYPE=tun
    #        - VPN_PROV=pia
    #        - STRONG_CERTS=no
    #        - ENABLE_PRIVOXY=yes
    #        - LAN_NETWORK=${CIDR_ADDRESS}
    #        - NAME_SERVERS=209.222.18.222,37.235.1.174,8.8.8.8,209.222.18.218,37.235.1.177,8.8.4.4
    #        - DEBUG=false
    #        - PUID=${PUID}
    #        - PGID=${PGID}
    #    volumes:
    #        - '${MEDIADIRECTORY}:/data'
    #        - '${CONFIGDIRECTORY}/delugevpn/config:/config'

    # ----------------------------------------
    # TRANSMISSION
    # ----------------------------------------
    transmission-openvpn:
        image: haugene/transmission-openvpn
        container_name: transmission
        restart: unless-stopped
        devices:
            - '/dev/net/tun:/dev/net/tun'
        ports:
            - '${IP_ADDRESS}:9091:9091'
        cap_add:
            - NET_ADMIN
        dns:
            - 8.8.8.8
            - 8.8.4.4
        environment:
            - OPENVPN_PROVIDER=PIA
            - OPENVPN_USERNAME=${PIAUNAME}
            - OPENVPN_PASSWORD=${PIAPASS}
            - 'OPENVPN_CONFIG=CA Toronto'
            - ENABLE_UFW=true
            - LOCAL_NETWORK=${CIDR_ADDRESS}
            - 'OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60'
            - PUID=${PUID}
            - PGID=${PGID}
            - TRANSMISSION_DOWNLOAD_QUEUE_SIZE=20
            - TRANSMISSION_QUEUE_STALLED_MINUTES=10
            - TRANSMISSION_PREALLOCATION=2
            - TRANSMISSION_ALT_SPEED_TIME_ENABLED=true
            - TRANSMISSION_ALT_SPEED_TIME_BEGIN=780
            - TRANSMISSION_ALT_SPEED_TIME_END=240
            - TRANSMISSION_ALT_SPEED_UP=0
            - TRANSMISSION_ALT_SPEED_DOWN=0
            - TRANSMISSION_SPEED_LIMIT_UP=6250
            - TRANSMISSION_SPEED_LIMIT_UP_ENABLED=true
            - TRANSMISSION_SPEED_LIMIT_DOWN=10000
            - TRANSMISSION_SPEED_LIMIT_DOWN_ENABLED=true
            - TRANSMISSION_UPLOAD_SLOTS_PER_TORRENT=10
            - TRANSMISSION_PEER_LIMIT_GLOBAL=200
        volumes:
            - '${MEDIADIRECTORY}:/data'

    # ----------------------------------------
    # DUPLICATI
    # ----------------------------------------
    #duplicati:
    #    image: linuxserver/duplicati
    #    container_name: duplicati
    #    restart: unless-stopped
    #    ports:
    #        - '${IP_ADDRESS}:8200:8200'
    #    environment:
    #        - PUID=${PUID}
    #        - PGID=${PGID}
    #    volumes:
    #        - '${CONFIGDIRECTORY}/duplicati:/config'
    #        - '${CONFIGDIRECTORY}/duplicati/backups:/backups'
    #        - '${CONFIGDIRECTORY}:/source'

    # ----------------------------------------
    # HTTP
    # ----------------------------------------
    uhttpd:
        image: fnichol/uhttpd
        container_name: uhttpd
        restart: unless-stopped
        ports:
            - '${IP_ADDRESS}:8080:80'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '${CONFIGDIRECTORY}/www:/www'

    # ----------------------------------------
    # JACKETT
    # ----------------------------------------
    jackett:
        image: linuxserver/jackett
        container_name: jackett
        restart: unless-stopped
        ports:
            - '${IP_ADDRESS}:9117:9117'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '${CONFIGDIRECTORY}/jackett:/config'

    # ----------------------------------------
    # MINIO
    # ----------------------------------------
    #minio:
    #    image: minio/minio
    #    container_name: minio
    #    restart: unless-stopped
    #    ports:
    #        - '${IP_ADDRESS}:9009:9000'
    #    environment:
    #        - MINIO_ACCESS_KEY=minio
    #        - MINIO_SECRET_KEY=minio123
    #    volumes:
    #        - '${MEDIADIRECTORY}:/export'
    #    command: server /export

    # ----------------------------------------
    # NETDATA
    # ----------------------------------------
    #netdata:
    #    image: titpetric/netdata
    #    container_name: netdata
    #    restart: unless-stopped
    #    ports:
    #        - '${IP_ADDRESS}:19999:19999'
    #    cap_add:
    #        - SYS_PTRACE
    #    volumes:
    #        - '/proc:/host/proc:ro'
    #        - '/sys:/host/sys:ro'
    #        - '/var/run/docker.sock:/var/run/docker.sock'

    # ----------------------------------------
    # Google OAuth Proxy
    # ----------------------------------------
    authproxy:
        image: a5huynh/oauth2_proxy
        container_name: authproxy
        restart: unless-stopped
        ports:
            - '${IP_ADDRESS}:80:4180'
        command:
            --cookie-secure=false
            --upstream="http://ombi:3579/"
            --http-address="0.0.0.0:4180"
            --redirect-url="http://${DOMAIN}/oauth2/callback"
            --authenticated-emails-file="/data/authed.txt"
            --skip-provider-button
        environment:
            OAUTH2_PROXY_COOKIE_SECRET: ZQzkmJH8ObiyM5yhhC0QixyNr32cwjNhOIqlUxFpBDDH+dsUgMqCL
            OAUTH2_PROXY_COOKIE_DOMAIN: ${DOMAIN}
            OAUTH2_PROXY_CLIENT_ID: ${OAUTH2_PROXY_CLIENT_ID}
            OAUTH2_PROXY_CLIENT_SECRET: ${OAUTH2_PROXY_CLIENT_SECRET}
        volumes:
            - "${CONFIGDIRECTORY}/authproxy/authed-emails.txt:/data/authed.txt:ro"

    # ----------------------------------------
    # OMBI
    # ----------------------------------------
    ombi:
        image: linuxserver/ombi:v2
        container_name: ombi
        restart: unless-stopped
        ports:
            - '${IP_ADDRESS}:3579:3579'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '${CONFIGDIRECTORY}/ombi:/config'
            - '${MEDIADIRECTORY}:/data'

    # ----------------------------------------
    # PLEX
    # ----------------------------------------
    plex:
        container_name: plex
        image: plexinc/pms-docker:${PMSTAG}
        restart: unless-stopped
        ports:
            - '${IP_ADDRESS}:32400:32400/tcp'
            - '${IP_ADDRESS}:3005:3005/tcp'
            - '${IP_ADDRESS}:8324:8324/tcp'
            - '${IP_ADDRESS}:32469:32469/tcp'
            - '${IP_ADDRESS}:1900:1900/udp'
            - '${IP_ADDRESS}:32410:32410/udp'
            - '${IP_ADDRESS}:32412:32412/udp'
            - '${IP_ADDRESS}:32413:32413/udp'
            - '${IP_ADDRESS}:32414:32414/udp'
        environment:
            - PLEX_CLAIM=${PMSTOKEN}
            - ADVERTISE_IP=http://${IP_ADDRESS}:32400/
            - ALLOWED_NETWORKS=${CIDR_ADDRESS}
            - PLEX_UID=${PUID}
            - PLEX_GID=${PGID}
        hostname: ${HOSTNAME}
        volumes:
            - '${CONFIGDIRECTORY}/plex:/config'
            - '${CONFIGDIRECTORY}/plex/transcode:/transcode'
            - '${MEDIADIRECTORY}/tv:/data/tvshows'
            - '${MEDIADIRECTORY}/movies:/data/movies'

    # ----------------------------------------
    # PLEXPY
    # ----------------------------------------
    tautulli:
        image: tautulli/tautulli
        container_name: tautulli
        restart: unless-stopped
        ports:
            - '${IP_ADDRESS}:8181:8181'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '${CONFIGDIRECTORY}/plexpy:/config'
            - '${CONFIGDIRECTORY}/plex/Library/Application Support/Plex Media Server/Logs:/logs:ro'
        depends_on:
            - plex

    # ----------------------------------------
    # PORTAINER
    # ----------------------------------------
    portainer:
        image: portainer/portainer:latest
        container_name: portainer
        restart: unless-stopped
        ports:
            - '${IP_ADDRESS}:9000:9000'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '${CONFIGDIRECTORY}/portainer:/data'
            - '/var/run/docker.sock:/var/run/docker.sock'
        command: ${PORTAINERSTYLE} -H unix:///var/run/docker.sock

    # ----------------------------------------
    # RADARR
    # ----------------------------------------
    radarr:
        image: linuxserver/radarr
        container_name: radarr
        restart: unless-stopped
        ports:
            - '${IP_ADDRESS}:7878:7878'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '${CONFIGDIRECTORY}/radarr:/config'
            - '${MEDIADIRECTORY}:/data'

    # ----------------------------------------
    # SICKRAGE
    # ----------------------------------------
    #sickrage:
    #    image: linuxserver/sickrage
    #    container_name: sickrage
    #    restart: unless-stopped
    #    ports:
    #        - '${IP_ADDRESS}:8081:8081'
    #    environment:
    #        - PUID=${PUID}
    #        - PGID=${PGID}
    #    volumes:
    #        - '${CONFIGDIRECTORY}/sickrage:/config'
    #        - '${MEDIADIRECTORY}/completed:/downloads'
    #        - '${MEDIADIRECTORY}/tv:/tv'

    # ----------------------------------------
    # SONARR
    # ----------------------------------------
    sonarr:
        image: linuxserver/sonarr
        container_name: sonarr
        restart: unless-stopped
        ports:
            - '${IP_ADDRESS}:8989:8989'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '${CONFIGDIRECTORY}/sonarr:/config'
            - '${MEDIADIRECTORY}:/data'

    # ----------------------------------------
    # WATCHTOWER
    # ----------------------------------------
    watchtower:
        image: v2tec/watchtower
        container_name: watchtower
        restart: unless-stopped
        environment:
            - TZ=${TZ}
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock'
        command: portainer --schedule @midnight --cleanup

